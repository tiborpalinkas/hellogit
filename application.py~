#!/usr/bin/env python
#-*-coding:utf-8-*-

from Tkinter import *

def circle(can, x, y, r):
	"a <can> vásznon egy <r> sugarú kör rajza <x,y> -ban"
	can.create_oval(x - r, y - r, x + r, y + r)
	
class Application(Tk):
	def __init__(self):
		Tk.__init__(self)			# a szülőosztály konstruktora
		self.can = Canvas(self, width = 475, height = 130, bg = "white")
		self.can.pack(side = TOP, padx = 5, pady = 5)
		Button(self, text = "Train", command = self.drawing).pack(side = LEFT)
		Button(self, text = "Hello", command = self.kukucs).pack(side = LEFT)
		
	def drawing(self):
		"4 vagon létrehozása a vásznon"
		self.w1 = Wagon(self.can, 10, 30)
		self.w2 = Wagon(self.can, 130, 30)
		self.w3 = Wagon(self.can, 250, 30)
		self.w4 = Wagon(self.can, 370, 30)
		
	def kukucs(self):
		"személyek megjelenése bizonyos ablakokban"
		self.w1.perso(3)			# 1. vagon, 3. ablak
		self.w3.perso(1)			# 3. vagon, 1. ablak
		self.w3.perso(2)			# 3. vagon, 2. ablak
		self.w4.perso(1)			# 4. vagon, 1. ablak
		
class Wagon:
	def __init__(self, canvas_, x, y):
		"egy kis vagon rajza a <canvas_> vásznon <x,y> -ban"
		# paraméterek tárolása példányváltozókban :
		self.canvas_, self.x, self.y = canvas_, x, y
		# alap téglalap : 95x60 pixel :
		canvas_.create_rectangle(x, y, x + 95, y + 60)
		# 3 ablak 25x40 pixel, 5 pixel távolságra
		for xf in range(x + 5, x + 90, 30):
			canvas_.create_rectangle(xf, y + 5, xf + 25, y + 40)
		# két 12 pixel sugarú kerék :
		circle(canvas_, x + 18, y + 73, 12)
		circle(canvas_, x + 77, y + 73, 12)
		
	def perso(self, wind):
		"egy emberke megjelenése a <wind> ablakban"
		# minden egyes ablak közepe koordinátájának a kiszámítása :
		xf = self.x + wind * 30 - 12
		yf = self.y + 25
		
